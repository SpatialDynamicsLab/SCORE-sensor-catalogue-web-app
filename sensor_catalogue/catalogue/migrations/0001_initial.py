# Generated by Django 4.1.6 on 2023-02-27 05:04

import autoslug.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Hazard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("SL", "Sea level rise"),
                            ("CF", "Coastal flooding"),
                            ("LF", "Land and river flooding"),
                            ("CE", "Coastal Erosion"),
                            ("SS", "Storm Surge"),
                            ("DH", "Droughts and heat waves"),
                            ("LS", "Landslide"),
                        ],
                        max_length=2,
                    ),
                ),
                ("description", models.TextField(blank=True, default="Not provided")),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="hazard_pictures/%Y/%m/%d"
                    ),
                ),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(
                        editable=False,
                        max_length=200,
                        null=True,
                        populate_from="name",
                        unique=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Hazard",
                "verbose_name_plural": "Hazards",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="HazardCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "hazard_category_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
            ],
            options={
                "verbose_name": "Hazard Category",
                "verbose_name_plural": "Hazard Categories",
            },
        ),
        migrations.CreateModel(
            name="HazardSpecific",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "hazard_specific_name",
                    models.CharField(blank=True, max_length=65, null=True),
                ),
            ],
            options={
                "verbose_name": "Specific Hazard",
                "verbose_name_plural": "Specific Hazard",
            },
        ),
        migrations.CreateModel(
            name="MonitoredParameter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("monitored_parameter_name", models.CharField(max_length=50)),
            ],
            options={
                "verbose_name": "Monitored Parameter",
                "verbose_name_plural": "Monitored Parameters",
            },
        ),
        migrations.CreateModel(
            name="Sensor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "id_old",
                    models.CharField(max_length=10, verbose_name="Sensor Old ID"),
                ),
                (
                    "tested_with_score",
                    models.BooleanField(default=True, verbose_name="Tested with SCORE"),
                ),
                (
                    "reference_partner",
                    models.CharField(max_length=150, verbose_name="Reference partner"),
                ),
                ("sensor_name", models.CharField(max_length=250, verbose_name="Name")),
                (
                    "short_description",
                    models.TextField(verbose_name="Short Description"),
                ),
                (
                    "full_description",
                    models.TextField(blank=True, verbose_name="Detailed Description"),
                ),
                (
                    "relevant_to_models",
                    models.BooleanField(
                        default=True, verbose_name="Relevant to WP3 Models / EWSS"
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Cost(â‚¬)"
                    ),
                ),
                (
                    "sensor_website",
                    models.URLField(blank=True, verbose_name="Sensor Web Page"),
                ),
                (
                    "project_name",
                    models.CharField(
                        blank=True, max_length=250, verbose_name="Project Name"
                    ),
                ),
                (
                    "project_year",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1990, 1990),
                            (1991, 1991),
                            (1992, 1992),
                            (1993, 1993),
                            (1994, 1994),
                            (1995, 1995),
                            (1996, 1996),
                            (1997, 1997),
                            (1998, 1998),
                            (1999, 1999),
                            (2000, 2000),
                            (2001, 2001),
                            (2002, 2002),
                            (2003, 2003),
                            (2004, 2004),
                            (2005, 2005),
                            (2006, 2006),
                            (2007, 2007),
                            (2008, 2008),
                            (2009, 2009),
                            (2010, 2010),
                            (2011, 2011),
                            (2012, 2012),
                            (2013, 2013),
                            (2014, 2014),
                            (2015, 2015),
                            (2016, 2016),
                            (2017, 2017),
                            (2018, 2018),
                            (2019, 2019),
                            (2020, 2020),
                            (2021, 2021),
                            (2022, 2022),
                            (2023, 2023),
                        ],
                        default=2023,
                        null=True,
                        verbose_name="Project Year",
                    ),
                ),
                (
                    "project_website",
                    models.URLField(blank=True, verbose_name="Project Website"),
                ),
                (
                    "reference_paper",
                    models.URLField(blank=True, verbose_name="Reference Paper"),
                ),
                (
                    "unit_of_measurement",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        null=True,
                        verbose_name="Unit of Measurement",
                    ),
                ),
                (
                    "accuracy",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        null=True,
                        verbose_name="Sensor Accuracy",
                    ),
                ),
                (
                    "data_refresh_time",
                    models.IntegerField(
                        blank=True,
                        default=5,
                        null=True,
                        verbose_name="Data Refresh Duration (Minutes)",
                    ),
                ),
                (
                    "wifi_connection",
                    models.BooleanField(default=True, verbose_name="WiFi Connection"),
                ),
                (
                    "mobile_data_connection",
                    models.BooleanField(default=True, verbose_name="4G Connection"),
                ),
                (
                    "number_of_components",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Number of components"
                    ),
                ),
                (
                    "external_power_supply",
                    models.BooleanField(
                        default=False, verbose_name="External Power Supply"
                    ),
                ),
                (
                    "minimum_purchase_quantity",
                    models.IntegerField(
                        blank=True,
                        default=1,
                        null=True,
                        verbose_name="Minimum purchase quantity",
                    ),
                ),
                (
                    "spatial_density_per_area",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Spatial Density / min number per area [km2]",
                    ),
                ),
                (
                    "spatial_density_distribution",
                    models.TextField(
                        blank=True,
                        default="Not provided",
                        null=True,
                        verbose_name="Spatial Density / min number and distribution description",
                    ),
                ),
                (
                    "purchase_operation",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("VD", "very difficult"),
                            ("DI", "difficult"),
                            ("NE", "neutral"),
                            ("EA", "easy"),
                            ("VE", "very easy"),
                        ],
                        max_length=2,
                        verbose_name="Purchase Operations Complexity",
                    ),
                ),
                (
                    "assembly_operation",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("VD", "very difficult"),
                            ("DI", "difficult"),
                            ("NE", "neutral"),
                            ("EA", "easy"),
                            ("VE", "very easy"),
                        ],
                        max_length=2,
                        verbose_name="Assembly Operations Complexity",
                    ),
                ),
                (
                    "installation_operation",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("VD", "very difficult"),
                            ("DI", "difficult"),
                            ("NE", "neutral"),
                            ("EA", "easy"),
                            ("VE", "very easy"),
                        ],
                        max_length=2,
                        verbose_name="Installation Operation Complexity ",
                    ),
                ),
                (
                    "installation_costs",
                    models.CharField(
                        blank=True,
                        choices=[("H", "high"), ("M", "medium"), ("L", "low")],
                        max_length=1,
                        verbose_name="Installation Cost",
                    ),
                ),
                (
                    "data_analysis_operation",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("VD", "very difficult"),
                            ("DI", "difficult"),
                            ("NE", "neutral"),
                            ("EA", "easy"),
                            ("VE", "very easy"),
                        ],
                        max_length=2,
                        verbose_name="Data Analysis Operations Complexity",
                    ),
                ),
                (
                    "citizen_science_operation",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("VD", "very difficult"),
                            ("DI", "difficult"),
                            ("NE", "neutral"),
                            ("EA", "easy"),
                            ("VE", "very easy"),
                        ],
                        max_length=2,
                        verbose_name="Citizen Science Activities Complexity",
                    ),
                ),
                (
                    "targeted_user",
                    models.CharField(
                        blank=True, max_length=250, verbose_name="Targeted Users"
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="sensor_pictures/%Y/%m/%d"
                    ),
                ),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(
                        default=None,
                        editable=False,
                        null=True,
                        populate_from="sensor_name",
                        unique=True,
                    ),
                ),
                (
                    "hazard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sensor",
                        to="catalogue.hazard",
                    ),
                ),
                (
                    "hazard_category",
                    models.ManyToManyField(
                        blank=True,
                        to="catalogue.hazardcategory",
                        verbose_name="Hazard Category",
                    ),
                ),
                (
                    "hazard_specific",
                    models.ManyToManyField(
                        blank=True,
                        to="catalogue.hazardspecific",
                        verbose_name="Hazard Specific",
                    ),
                ),
                (
                    "monitored_parameter",
                    models.ManyToManyField(
                        blank=True,
                        to="catalogue.monitoredparameter",
                        verbose_name="Monitored Parameter",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sensor",
                "verbose_name_plural": "Sensors",
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SensorImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "images",
                    models.FileField(blank=True, upload_to="sensor_images/%Y/%m/%d"),
                ),
                (
                    "sensor",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="catalogue.sensor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sensor Image",
                "verbose_name_plural": "Sensor Images",
            },
        ),
        migrations.CreateModel(
            name="OrderSensor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ordered", models.BooleanField(default=False)),
                ("quantity", models.IntegerField(default=1)),
                (
                    "sensor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="catalogue.sensor",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Order Sensor",
                "verbose_name_plural": "Order Sensors",
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateTimeField(auto_now_add=True)),
                ("ordered_date", models.DateTimeField()),
                ("ordered", models.BooleanField(default=False)),
                ("sensors", models.ManyToManyField(to="catalogue.ordersensor")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Order",
                "verbose_name_plural": "Orders",
            },
        ),
        migrations.AddIndex(
            model_name="hazard",
            index=models.Index(fields=["name"], name="catalogue_h_name_eeae41_idx"),
        ),
    ]
